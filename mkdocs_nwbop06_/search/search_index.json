{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to PySHbundle \u00b6 PySHbundle: A Python implementation of MATLAB codes SHbundle Free software: GNU General Public License v3 Documentation: https://mn5hk.github.io/pyshbundle Features \u00b6 TODO How to install \u00b6 We recommend using Mamba to install required packages conda create pysh conda activate pysh conda install -c conda-forge mamba mamba install -c conda-forge numpy pandas netCDF4 scipy xarray julian scipy geopandas matplotlib rasterio salem shapely Convert SHbundle matlab codes to python Geodesy for Earth system science (GESS) research Group at ICWaR, IISc Currently we are upgrading (under process) the package to be implementable on binder. How to download data \u00b6 Mathematics \u00b6 In this section, we present a mathematical representation of the spherical harmonics analysis. According to potential theory, the gravitational field of a body fulfils the Laplace equation \\(\\nabla^2\\phi = 0\\) . Laplace's equation in spherical coordinates can be written as follows: \\[\\begin{equation} \\frac{1}{r^2}\\frac{\\partial}{\\partial r}\\bigg( r^2\\frac{\\partial \\phi}{\\partial r}\\bigg) + \\frac{1}{r^2\\sin\\vartheta}\\frac{\\partial}{\\partial \\vartheta}\\bigg(\\sin\\vartheta\\frac{\\partial \\phi}{\\partial \\vartheta}\\bigg) + \\frac{1}{r^2\\sin^2\\vartheta}\\frac{\\partial^2 \\phi}{\\partial \\lambda^2} = 0 , \\end{equation}\\] where \\(\\phi\\) is the potential, \\(r\\) is the radius, \\(\\vartheta\\) is the co-latitude and \\(\\lambda\\) is the longitude. We perform a separation of variables and insert \\(\\phi(r, \\vartheta, \\lambda) =f(r)g(\\vartheta)h(\\lambda)\\) into the Laplace equation to get three independent equations: \\[\\begin{equation} r^2\\frac{d^2f}{dr^2}+2r\\frac{df}{dr} - n(n+1)f = 0, \\end{equation}\\] \\[\\begin{equation} \\frac{d^2g}{d\\vartheta^2} + \\frac{dg}{d\\vartheta}\\cot\\vartheta + \\bigg( n(n+1) - \\frac{m^2}{\\sin^2\\vartheta} \\bigg) g = 0 , \\end{equation}\\] \\[\\begin{equation} \\frac{d^2h}{d\\lambda^2} + m^2h = 0, \\end{equation}\\] where \\(m\\) and \\(n\\) are the degree and order respectively. Solving \\((2), (3)\\) and \\((4)\\) , we obtain: \\[\\begin{equation} f(r) \\in \\{r^n, r^{-(n+1)}\\}, \\end{equation}\\] \\[\\begin{equation} g(\\vartheta) \\in \\{P_{n,m}(\\cos \\vartheta), Q_{n,m}(\\cos \\vartheta)\\} , \\end{equation}\\] \\begin{equation} h(\\lambda) \\in {\\cos m\\lambda, \\sin m\\lambda}. \\end{equation}\\ Thus, the Laplace equation's solution takes the following form: \\[\\begin{equation} \\phi(r, \\vartheta, \\lambda) = \\sum_{n=0}^{\\infty} \\sum_{m=0}^{n} \\alpha_{n,m} \\begin{Bmatrix} P_{n,m}(\\cos\\vartheta)\\\\ Q_{n,m}(\\cos\\vartheta)\\\\ \\end{Bmatrix} \\dot{\u2022} \\begin{Bmatrix} \\cos m\\lambda\\\\ \\sin m\\lambda\\\\ \\end{Bmatrix} \\dot{\u2022} \\begin{Bmatrix} r^n\\\\ r^{(n+1)}\\\\ \\end{Bmatrix} . \\end{equation}\\] Solutions for \\(f(r)\\) and \\(h(\\lambda)\\) are fairly straightforward. Eq - (3) for \\(g(\\vartheta)\\) is in the form of a Legendre differential equation and its solutions are \\(P_{n,m}(\\cos \\vartheta)\\) and \\(Q_{n,m}(\\cos \\vartheta)\\) , the associated Legendre functions of the first and second kind. We now apply two constraints to the solution: \\(\\phi \\rightarrow 0\\) when \\(r \\rightarrow \\infty\\) , \\(\\phi\\) is limited on the sphere, which leads us to eliminate \\(Q_{n,m}(\\cos \\vartheta)\\) and \\(r^n\\) .The \\(4\\pi\\) normalization of the Associated Legendre functions [8] is utilized in our package and is given by: \\[\\begin{equation} \\bar{P}_{n,m}(\\cos\\vartheta) = P_{n,m}(\\cos\\vartheta)\\sqrt{(2-\\delta_{m0})(2n+1)\\frac{(n-m)!}{(n+m)!}}, \\end{equation}\\] where \\(\\delta_{m0}\\) is the Kronecker delta function, \\[\\begin{equation} P_{n,m}(t) = (1-t^2)^{\\frac{m}{2}}\\frac{d^mP_n(t)}{dt^m}, \\end{equation}\\] and \\[\\begin{equation} nP_n(t)=-(n-1)P_{n-2}(t) + (2n-1)tP_{n-1}(t). \\end{equation}\\] Spherical harmonics are the angular portion of a set of solutions to Laplace's equation. They take into account \\(\\vartheta\\) and \\(\\lambda\\) . They are functions modelled on the surface of a sphere, denoted by \\(Y_{n,m}(\\vartheta,\\lambda)\\) . They are of three kinds: Zonal harmonics: \\(m=0\\) - they are only latitude dependent, Tesseral harmonics: \\(0 < m < n\\) , and Sectorial harmonics: \\(m=n\\) . Quantities like the gravitational potential, height of water column, gravity anomaly and so on are the functionals of the gravity field which are obtained by differentiating the potential \\(\\phi\\) with respect to the spherical coordinates. The gravitational potential anomaly \\(V\\) is given by: \\[\\begin{equation} V(r, \\vartheta, \\lambda) = \\frac{GM}{r} \\sum_{n=0} ^{N_{max}} \\sum_{m=0} ^{n} \\left(\\frac{R}{r}\\right) ^{n+1} \\bar{P}_{n,m}(\\cos \\vartheta) [C_{n,m}\\cos m\\lambda+S_{n,m}\\sin m\\lambda]. \\end{equation}\\] Here, \\(R\\) refers to the radius of the Earth, \\(\\bar{P}_ {n,m}\\) refers to the Associated Legendre functions with \\(4\\pi\\) normalization, \\(C_{lm}\\) and \\(S_{lm}\\) refer to the spherical harmonic coefficients. Similarly, another functional, the change in surface mass density, is represented by: \\[\\begin{equation} \\Delta\\sigma(\\vartheta, \\lambda) = \\frac{a\\rho_{ave}}{3} \\sum_{n=0}^{N_{max}}\\sum_{m=0}^{n} \\left(\\frac{R}{r}\\right)^{n+1} \\bar{P}_{n,m}(\\cos\\vartheta) \\frac{2n+1}{1+k_l} [C_{n,m}\\cos m\\lambda + S_{n,m}\\sin m\\lambda], \\end{equation}\\] where \\(\\rho_{ave}\\) refers to the average density of the Earth in \\(g/cm^3\\) and \\(k_n\\) refers to the load Love number of degree \\(n\\) . Credits \u00b6 This package was created with Cookiecutter and the giswqs/pypackage project template.","title":"Home"},{"location":"#welcome-to-pyshbundle","text":"PySHbundle: A Python implementation of MATLAB codes SHbundle Free software: GNU General Public License v3 Documentation: https://mn5hk.github.io/pyshbundle","title":"Welcome to PySHbundle"},{"location":"#features","text":"TODO","title":"Features"},{"location":"#how-to-install","text":"We recommend using Mamba to install required packages conda create pysh conda activate pysh conda install -c conda-forge mamba mamba install -c conda-forge numpy pandas netCDF4 scipy xarray julian scipy geopandas matplotlib rasterio salem shapely Convert SHbundle matlab codes to python Geodesy for Earth system science (GESS) research Group at ICWaR, IISc Currently we are upgrading (under process) the package to be implementable on binder.","title":"How to install "},{"location":"#how-to-download-data","text":"","title":"How to download data"},{"location":"#mathematics","text":"In this section, we present a mathematical representation of the spherical harmonics analysis. According to potential theory, the gravitational field of a body fulfils the Laplace equation \\(\\nabla^2\\phi = 0\\) . Laplace's equation in spherical coordinates can be written as follows: \\[\\begin{equation} \\frac{1}{r^2}\\frac{\\partial}{\\partial r}\\bigg( r^2\\frac{\\partial \\phi}{\\partial r}\\bigg) + \\frac{1}{r^2\\sin\\vartheta}\\frac{\\partial}{\\partial \\vartheta}\\bigg(\\sin\\vartheta\\frac{\\partial \\phi}{\\partial \\vartheta}\\bigg) + \\frac{1}{r^2\\sin^2\\vartheta}\\frac{\\partial^2 \\phi}{\\partial \\lambda^2} = 0 , \\end{equation}\\] where \\(\\phi\\) is the potential, \\(r\\) is the radius, \\(\\vartheta\\) is the co-latitude and \\(\\lambda\\) is the longitude. We perform a separation of variables and insert \\(\\phi(r, \\vartheta, \\lambda) =f(r)g(\\vartheta)h(\\lambda)\\) into the Laplace equation to get three independent equations: \\[\\begin{equation} r^2\\frac{d^2f}{dr^2}+2r\\frac{df}{dr} - n(n+1)f = 0, \\end{equation}\\] \\[\\begin{equation} \\frac{d^2g}{d\\vartheta^2} + \\frac{dg}{d\\vartheta}\\cot\\vartheta + \\bigg( n(n+1) - \\frac{m^2}{\\sin^2\\vartheta} \\bigg) g = 0 , \\end{equation}\\] \\[\\begin{equation} \\frac{d^2h}{d\\lambda^2} + m^2h = 0, \\end{equation}\\] where \\(m\\) and \\(n\\) are the degree and order respectively. Solving \\((2), (3)\\) and \\((4)\\) , we obtain: \\[\\begin{equation} f(r) \\in \\{r^n, r^{-(n+1)}\\}, \\end{equation}\\] \\[\\begin{equation} g(\\vartheta) \\in \\{P_{n,m}(\\cos \\vartheta), Q_{n,m}(\\cos \\vartheta)\\} , \\end{equation}\\] \\begin{equation} h(\\lambda) \\in {\\cos m\\lambda, \\sin m\\lambda}. \\end{equation}\\ Thus, the Laplace equation's solution takes the following form: \\[\\begin{equation} \\phi(r, \\vartheta, \\lambda) = \\sum_{n=0}^{\\infty} \\sum_{m=0}^{n} \\alpha_{n,m} \\begin{Bmatrix} P_{n,m}(\\cos\\vartheta)\\\\ Q_{n,m}(\\cos\\vartheta)\\\\ \\end{Bmatrix} \\dot{\u2022} \\begin{Bmatrix} \\cos m\\lambda\\\\ \\sin m\\lambda\\\\ \\end{Bmatrix} \\dot{\u2022} \\begin{Bmatrix} r^n\\\\ r^{(n+1)}\\\\ \\end{Bmatrix} . \\end{equation}\\] Solutions for \\(f(r)\\) and \\(h(\\lambda)\\) are fairly straightforward. Eq - (3) for \\(g(\\vartheta)\\) is in the form of a Legendre differential equation and its solutions are \\(P_{n,m}(\\cos \\vartheta)\\) and \\(Q_{n,m}(\\cos \\vartheta)\\) , the associated Legendre functions of the first and second kind. We now apply two constraints to the solution: \\(\\phi \\rightarrow 0\\) when \\(r \\rightarrow \\infty\\) , \\(\\phi\\) is limited on the sphere, which leads us to eliminate \\(Q_{n,m}(\\cos \\vartheta)\\) and \\(r^n\\) .The \\(4\\pi\\) normalization of the Associated Legendre functions [8] is utilized in our package and is given by: \\[\\begin{equation} \\bar{P}_{n,m}(\\cos\\vartheta) = P_{n,m}(\\cos\\vartheta)\\sqrt{(2-\\delta_{m0})(2n+1)\\frac{(n-m)!}{(n+m)!}}, \\end{equation}\\] where \\(\\delta_{m0}\\) is the Kronecker delta function, \\[\\begin{equation} P_{n,m}(t) = (1-t^2)^{\\frac{m}{2}}\\frac{d^mP_n(t)}{dt^m}, \\end{equation}\\] and \\[\\begin{equation} nP_n(t)=-(n-1)P_{n-2}(t) + (2n-1)tP_{n-1}(t). \\end{equation}\\] Spherical harmonics are the angular portion of a set of solutions to Laplace's equation. They take into account \\(\\vartheta\\) and \\(\\lambda\\) . They are functions modelled on the surface of a sphere, denoted by \\(Y_{n,m}(\\vartheta,\\lambda)\\) . They are of three kinds: Zonal harmonics: \\(m=0\\) - they are only latitude dependent, Tesseral harmonics: \\(0 < m < n\\) , and Sectorial harmonics: \\(m=n\\) . Quantities like the gravitational potential, height of water column, gravity anomaly and so on are the functionals of the gravity field which are obtained by differentiating the potential \\(\\phi\\) with respect to the spherical coordinates. The gravitational potential anomaly \\(V\\) is given by: \\[\\begin{equation} V(r, \\vartheta, \\lambda) = \\frac{GM}{r} \\sum_{n=0} ^{N_{max}} \\sum_{m=0} ^{n} \\left(\\frac{R}{r}\\right) ^{n+1} \\bar{P}_{n,m}(\\cos \\vartheta) [C_{n,m}\\cos m\\lambda+S_{n,m}\\sin m\\lambda]. \\end{equation}\\] Here, \\(R\\) refers to the radius of the Earth, \\(\\bar{P}_ {n,m}\\) refers to the Associated Legendre functions with \\(4\\pi\\) normalization, \\(C_{lm}\\) and \\(S_{lm}\\) refer to the spherical harmonic coefficients. Similarly, another functional, the change in surface mass density, is represented by: \\[\\begin{equation} \\Delta\\sigma(\\vartheta, \\lambda) = \\frac{a\\rho_{ave}}{3} \\sum_{n=0}^{N_{max}}\\sum_{m=0}^{n} \\left(\\frac{R}{r}\\right)^{n+1} \\bar{P}_{n,m}(\\cos\\vartheta) \\frac{2n+1}{1+k_l} [C_{n,m}\\cos m\\lambda + S_{n,m}\\sin m\\lambda], \\end{equation}\\] where \\(\\rho_{ave}\\) refers to the average density of the Earth in \\(g/cm^3\\) and \\(k_n\\) refers to the load Love number of degree \\(n\\) .","title":"Mathematics"},{"location":"#credits","text":"This package was created with Cookiecutter and the giswqs/pypackage project template.","title":"Credits"},{"location":"changelog/","text":"Changelog \u00b6 v0.0.1 - Date \u00b6 Improvement : TBD New Features : TBD","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v001-date","text":"Improvement : TBD New Features : TBD","title":"v0.0.1 - Date"},{"location":"contributing/","text":"Contributing \u00b6 Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways: Types of Contributions \u00b6 Report Bugs \u00b6 Report bugs at https://github.com/mn5hk/pyshbundle/issues . If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug. Fix Bugs \u00b6 Look through the GitHub issues for bugs. Anything tagged with bug and help wanted is open to whoever wants to implement it. Implement Features \u00b6 Look through the GitHub issues for features. Anything tagged with enhancement and help wanted is open to whoever wants to implement it. Write Documentation \u00b6 pyshbundle could always use more documentation, whether as part of the official pyshbundle docs, in docstrings, or even on the web in blog posts, articles, and such. Submit Feedback \u00b6 The best way to send feedback is to file an issue at https://github.com/mn5hk/pyshbundle/issues . If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :) Get Started! \u00b6 Ready to contribute? Here's how to set up pyshbundle for local development. Fork the pyshbundle repo on GitHub. Clone your fork locally: 1 $ git clone git@github.com:your_name_here/pyshbundle.git Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development: 1 2 3 $ mkvirtualenv pyshbundle $ cd pyshbundle/ $ python setup.py develop Create a branch for local development: 1 $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you're done making changes, check that your changes pass flake8 and the tests, including testing other Python versions with tox: 1 2 3 $ flake8 pyshbundle tests $ python setup.py test or pytest $ tox To get flake8 and tox, just pip install them into your virtualenv. Commit your changes and push your branch to GitHub: 1 2 3 $ git add . $ git commit -m \"Your detailed description of your changes.\" $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website. Pull Request Guidelines \u00b6 Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.rst. The pull request should work for Python 3.5, 3.6, 3.7 and 3.8, and for PyPy. Check https://github.com/mn5hk/pyshbundle/pull_requests and make sure that the tests pass for all supported Python versions.","title":"Contributing"},{"location":"contributing/#contributing","text":"Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. You can contribute in many ways:","title":"Contributing"},{"location":"contributing/#types-of-contributions","text":"","title":"Types of Contributions"},{"location":"contributing/#report-bugs","text":"Report bugs at https://github.com/mn5hk/pyshbundle/issues . If you are reporting a bug, please include: Your operating system name and version. Any details about your local setup that might be helpful in troubleshooting. Detailed steps to reproduce the bug.","title":"Report Bugs"},{"location":"contributing/#fix-bugs","text":"Look through the GitHub issues for bugs. Anything tagged with bug and help wanted is open to whoever wants to implement it.","title":"Fix Bugs"},{"location":"contributing/#implement-features","text":"Look through the GitHub issues for features. Anything tagged with enhancement and help wanted is open to whoever wants to implement it.","title":"Implement Features"},{"location":"contributing/#write-documentation","text":"pyshbundle could always use more documentation, whether as part of the official pyshbundle docs, in docstrings, or even on the web in blog posts, articles, and such.","title":"Write Documentation"},{"location":"contributing/#submit-feedback","text":"The best way to send feedback is to file an issue at https://github.com/mn5hk/pyshbundle/issues . If you are proposing a feature: Explain in detail how it would work. Keep the scope as narrow as possible, to make it easier to implement. Remember that this is a volunteer-driven project, and that contributions are welcome :)","title":"Submit Feedback"},{"location":"contributing/#get-started","text":"Ready to contribute? Here's how to set up pyshbundle for local development. Fork the pyshbundle repo on GitHub. Clone your fork locally: 1 $ git clone git@github.com:your_name_here/pyshbundle.git Install your local copy into a virtualenv. Assuming you have virtualenvwrapper installed, this is how you set up your fork for local development: 1 2 3 $ mkvirtualenv pyshbundle $ cd pyshbundle/ $ python setup.py develop Create a branch for local development: 1 $ git checkout -b name-of-your-bugfix-or-feature Now you can make your changes locally. When you're done making changes, check that your changes pass flake8 and the tests, including testing other Python versions with tox: 1 2 3 $ flake8 pyshbundle tests $ python setup.py test or pytest $ tox To get flake8 and tox, just pip install them into your virtualenv. Commit your changes and push your branch to GitHub: 1 2 3 $ git add . $ git commit -m \"Your detailed description of your changes.\" $ git push origin name-of-your-bugfix-or-feature Submit a pull request through the GitHub website.","title":"Get Started!"},{"location":"contributing/#pull-request-guidelines","text":"Before you submit a pull request, check that it meets these guidelines: The pull request should include tests. If the pull request adds functionality, the docs should be updated. Put your new functionality into a function with a docstring, and add the feature to the list in README.rst. The pull request should work for Python 3.5, 3.6, 3.7 and 3.8, and for PyPy. Check https://github.com/mn5hk/pyshbundle/pull_requests and make sure that the tests pass for all supported Python versions.","title":"Pull Request Guidelines"},{"location":"faq/","text":"FAQ \u00b6","title":"FAQ"},{"location":"faq/#faq","text":"","title":"FAQ"},{"location":"installation/","text":"Installation \u00b6 Stable release \u00b6 To install pyshbundle, run this command in your terminal: 1 pip install pyshbundle This is the preferred method to install pyshbundle, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process. From sources \u00b6 The sources for pyshbundle can be downloaded from the Github repo. You can clone the public repository: 1 git clone git://github.com/mn5hk/pyshbundle","title":"Installation"},{"location":"installation/#installation","text":"","title":"Installation"},{"location":"installation/#stable-release","text":"To install pyshbundle, run this command in your terminal: 1 pip install pyshbundle This is the preferred method to install pyshbundle, as it will always install the most recent stable release. If you don't have pip installed, this Python installation guide can guide you through the process.","title":"Stable release"},{"location":"installation/#from-sources","text":"The sources for pyshbundle can be downloaded from the Github repo. You can clone the public repository: 1 git clone git://github.com/mn5hk/pyshbundle","title":"From sources"},{"location":"pyshbundle/","text":"Reference Mannual - PySHBundle \u00b6 The module codes can be categorized into four categories: load data convert data formats core functionality auxillary codes Navigate the Reference Manual based on the following schematic Doc Summary \u00b6 Load Data \u00b6 Created on Fri Feb 17 2023 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) The purpose of this script is to, firstly read what the data source is (JPL, CSR or ITSG) read file path for GRACE L2 spherical harmonics inputs, read replacement files for tn13 and tn14 source of the SH files (JPL, ITSG or CSR) The code returns path of data files, path of tn13 and path of tn14 replacement files This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Fri Dec 9 10:08:55 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Fri Dec 9 10:08:55 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Fri Dec 9 10:08:55 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Mon Feb 6 18:43:02 2023 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Fri Feb 17 2023 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This script contains some of the major relavant Physical and Geodetic(GRS80) constants: Convert Data Formats \u00b6 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 1 2 3 4 5 6 7 8 9 10 11 cs2sc(field) converts the square (L+1)x(L+1) matrix 'field', containing spherical harmonics coefficients in |C\\S| storage format into a rectangular (L+1)x(2L+1) matrix in /S|C ormat. IN: field .... the square (L+1)x(L+1) numpy matrix field , containing spherical harmonics coefficients in |C\\S| storage format OUT: sc ....... rectangular (L+1)x(2L+1) numpy matrix in /S|C ormat @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) sc2cs - format conversion tool from rectangular sc format to a square cs format sc2cs ( field ) \u00b6 converts the rectangular \\((L+1) imes (2L+1)\\) matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format into a square (L+1)x(L+1) matrix in |C\\S| format. Parameters: Name Type Description Default field numpy . ndarray the rectangular (L+1)x(2L+1) matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format required Returns: Name Type Description cs numpy . ndarray () square (L+1)x(L+1) matrix in |C\\S| format Source code in pyshbundle/sc2cs.py 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 def sc2cs ( field ): \"\"\"converts the rectangular $(L+1) \\times (2L+1)$ matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format into a square (L+1)x(L+1) matrix in |C\\S| format. Parameters: field (numpy.ndarray()): the rectangular (L+1)x(2L+1) matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format Returns: cs (numpy.ndarray()): square (L+1)x(L+1) matrix in |C\\S| format \"\"\" rows = len ( field ) cols = len ( field [ 0 ]) if ( rows != cols ) and ( cols != 2 * rows - 1 ): sc2cs . exit ( \"Input neither in cs nor in sc format\" ) elif cols == rows : cs = field else : c = field [:, rows - 1 : cols ] st = numpy . transpose ( numpy . fliplr ( field [:, 0 : rows - 1 ])) z = numpy . zeros ([ 1 , rows ]) s = numpy . concatenate (( st , z ), axis = 0 ) cs = numpy . add ( c , s ) return ( cs ) Created on Fri Dec 9 11:43:15 2022 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Fri Dec 9 10:14:32 2022 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Tue Jan 24 10:14:27 2023 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Core functionality \u00b6 Created on Wed Aug 24 09:26:32 2022 GSHA global spherical harmonic analysis IN: f ....... global field of size (lmax+1) 2 lmax or lmax 2 lmax method .. string argument, defining the analysis method: - 'ls' ..... least squares - 'wls' .... weighted least squares - 'aq' ..... approximate quadrature - 'fnm' .... first neumann method - 'snm' .... second neumann method - 'mean' ... block mean values (use of integrated Plm) grid .... optional string argument, defining the grid: - 'pole', 'mesh' ...... (default if lmax+1), equi-angular (lmax+1) 2 lmax, including poles and Greenwich meridian. - 'block', 'cell' ..... (default if lmax), equi-angular block midpoints lmax 2lmax - 'neumann', 'gauss' .. Gauss-Neumann grid (lmax+1) 2*lmax lmax .... maximum degree of development OUT: cs ...... Clm, Slm in |C\\S| format USES: plm, iplm, neumann, sc2cs SEE ALSO: GSHS REMARKS: TBD - Zlm-functions option - eigengrav, GRS80 - When 'pole' grid, m = 1 yields singular Plm-matrix! @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Wed Aug 10 15:55:22 2022 GSHS global spherical harmonic synthesis f = gshs(field) IN: field ... set of SH coefficients, either in SC-triangle or CS-square format quant ... optional string argument, defining the field quantity: - 'none' ............. (default), coefficients define the output - 'geoid' ............ geoid height [m], - 'potential' ........ potential [m^2/s^2], - 'dg', 'gravity' .... gravity anomaly [mGal], - 'tr' ............... grav. disturbance, 1st rad. derivative [mGal], - 'trr' .............. 2nd rad. derivative [1/s^2], - 'water' ............ equiv. water height [m], - 'smd' .............. surface mass density [kg/m^2]. grd .... optional string argument, defining the grid: - 'block', 'cell' .... equi-angular block midpoints. n 2n n ...... grid size parameter n. (default: n = lmax, determined from field) #longitude samples: 2 n #latitude samples n ('blocks') or n+1. h ...... (default: 0), height above Earth mean radius [m]. jflag .. (default: true), determines whether to subtract GRS80. OUT: f ....... the global field theRAD .. vector of co-latitudes [rad] lamRAD .. vector of longitudes [rad] USES: vec2cs, cs2sc, eigengrav, plm, normalklm, grule, ispec SEE ALSO: gsha This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) %::: pyshbundle.gddc% Created on Wed Dec 14 22:37:19 2022 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) PySHbundle: A Python implementation of MATLAB codes SHbundle This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Mon Aug 29 09:47:38 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Auxillary Codes \u00b6 PLM Fully normalized associated Legendre functions for a selected order M Input as l = np.array([np.arange(0,97,1)]) m = 0 thetaRAD = np.array([0,0.25,0.5,0.75,1]) HOW: p = plm(l, m, thetaRAD,3,1)[:,:,0] dp = plm(l, m, thetaRAD,3,2) 1 ddp = plm(l, m, thetaRAD,3,3) 2 IN: l ........ degree (vector). Integer, but not necessarily monotonic. For l < m a vector of zeros will be returned. m ........ order (scalar). If absent, m = 0 is assumed. thetaRAD . co-latitude [rad] (vector) OUT: p ........ Matrix with Legendre functions. The matrix has length(thetaRAD) rows and length(l) columns, unless l or thetaRAD is scalar. Then the output vector follows the shape of respectively l or thetaRAD. dp ....... Matrix with first derivative of Legendre functions. The matrix has length(thetaRAD) rows and length(l) columns, unless l or thetaRAD is scalar. Then the output vector follows the shape of respectively l or thetaRAD. ddp ...... Matrix with second derivative of Legendre functions. The matrix has length(thetaRAD) rows and length(l) columns, unless l or thetaRAD is scalar. Then the output vector follows the shape of respectively l or thetaRAD. SEE ALSO: iplm REMARKS: Previous versions calculated the derivatives towards the latitude, i. e. dP/d\\phi are calculated. Please check your code in order to get the derivatives correctly towards the co-latitude! -> dP/d hetaRAD = -dP/d\\phi -> d^2P/d hetaRAD^2 = d^2P/d\\phi^2 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 IPLM Integrals of the fully normalized associated Legendre functions over blocks for a selected order M. HOW: p = iplm(l,m,theRAD) - assumes dt = theRAD(2)-theRAD(1) p = iplm(l,m,theRAD,dt) IN: l ........ degree (vector). Integer, but not necessarily monotonic. For l < m a vector of zeros will be returned. m ........ order (scalar) theRAD ... co-latitude [rad] (vector) dt ....... integration block-size [rad] (scalar). Default: dt = theRAD(2)-theRAD(1) OUT: p ........ Matrix with integrated Legendre functions. Functions are integrated from theRAD(i)-dt/2 till theRAD(i)+dt/2. The matrix has length(TH) rows and length(L) columns, unless L or TH is scalar. Then the output vector follows the shape of respectively L or TH. USES: plm REMARKS: The blocks at the pole might become too large under circumstances. This is not treated separately, i.e. unwanted output may appear. In case TH is scalar, dt will be 1 (arbitrarily). This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 lovenr ( lmax ) \u00b6 Created on Mon May 11 11:09:28 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Source code in pyshbundle/GRACEpy.py 67 68 69 70 71 72 73 74 75 76 77 def lovenr ( lmax ): \"\"\" Created on Mon May 11 11:09:28 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) \"\"\" l = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 12 , 15 , 20 , 30 , 40 , 50 , 70 , 100 , 150 , 200 ] kl = numpy . divide ([ 0 , 270 , - 3030 , - 1940 , - 1320 , - 1040 , - 890 , - 810 , - 760 , - 720 , - 690 , - 640 , - 580 , - 510 , - 400 , - 330 , - 270 , - 200 , - 140 , - 100 , - 700 ], 1e4 ) n = range ( 0 , lmax + 1 , 1 ) kn = numpy . interp ( n , l , kl ) return ( kn ) lovenrPREM ( lmax , frame ) \u00b6 Created on Mon May 11 11:51:29 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Source code in pyshbundle/GRACEpy.py 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 def lovenrPREM ( lmax , frame ): \"\"\" Created on Mon May 11 11:51:29 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) \"\"\" data = numpy . array ([[ 1 , - 0.28476 , 0.00000 , 0.10462 ], [ 2 , - 0.99297 , - 0.61274 , 0.04661 ] , [ 3 , - 1.05142 , - 0.58897 , 0.21048 ] , [ 4 , - 1.05378 , - 0.53513 , 0.23564 ] , [ 5 , - 1.08658 , - 0.52382 , 0.23186 ] , [ 6 , - 1.14404 , - 0.54222 , 0.23263 ] , [ 7 , - 1.21254 , - 0.57464 , 0.24058 ] , [ 8 , - 1.28403 , - 0.61256 , 0.25308 ] , [ 9 , - 1.35479 , - 0.65203 , 0.26799 ] , [ 10 , - 1.42330 , - 0.69140 , 0.28419 ] , [ 11 , - 1.48909 , - 0.72998 , 0.30121 ] , [ 12 , - 1.55204 , - 0.76749 , 0.31880 ] , [ 13 , - 1.61221 , - 0.80381 , 0.33684 ] , [ 14 , - 1.66968 , - 0.83886 , 0.35522 ] , [ 15 , - 1.72454 , - 0.87260 , 0.37382 ] , [ 16 , - 1.77684 , - 0.90499 , 0.39251 ] , [ 17 , - 1.82668 , - 0.93599 , 0.41119 ] , [ 18 , - 1.87414 , - 0.96560 , 0.42973 ] , [ 19 , - 1.91928 , - 0.99382 , 0.44804 ] , [ 20 , - 1.96220 , - 1.02066 , 0.46603 ] , [ 21 , - 2.00297 , - 1.04614 , 0.48363 ] , [ 22 , - 2.04169 , - 1.07029 , 0.50078 ] , [ 23 , - 2.07844 , - 1.09313 , 0.51742 ] , [ 24 , - 2.11332 , - 1.11472 , 0.53355 ] , [ 25 , - 2.14642 , - 1.13511 , 0.54912 ] , [ 30 , - 2.28839 , - 1.22067 , 0.61848 ] , [ 40 , - 2.48641 , - 1.33024 , 0.71925 ] , [ 50 , - 2.61710 , - 1.39016 , 0.78410 ] , [ 60 , - 2.71254 , - 1.42377 , 0.82683 ] , [ 70 , - 2.78865 , - 1.44313 , 0.85550 ] , [ 80 , - 2.85368 , - 1.45474 , 0.87479 ] , [ 90 , - 2.91216 , - 1.46226 , 0.88764 ] , [ 100 , - 2.96672 , - 1.46787 , 0.89598 ] , [ 120 , - 3.06983 , - 1.47811 , 0.90421 ] , [ 140 , - 3.16950 , - 1.49082 , 0.90634 ] , [ 160 , - 3.26809 , - 1.50771 , 0.90603 ] , [ 180 , - 3.36633 , - 1.52909 , 0.90532 ] , [ 200 , - 3.48436 , - 1.55473 , 0.90547 ] , [ 250 , - 3.70773 , - 1.63448 , 0.91388 ] , [ 300 , - 3.94607 , - 1.73053 , 0.93714 ] , [ 350 , - 4.17591 , - 1.83593 , 0.97495 ] , [ 400 , - 4.39433 , - 1.94515 , 1.02467 ] , [ 500 , - 4.78872 , - 2.15940 , 1.14615 ] , [ 600 , - 5.12008 , - 2.35243 , 1.27714 ] , [ 800 , - 5.59959 , - 2.64798 , 1.50995 ] , [ 1000 , - 5.88447 , - 2.83157 , 1.67325 ] , [ 1500 , - 6.15106 , - 3.00957 , 1.84797 ] , [ 2000 , - 6.20058 , - 3.04408 , 1.88423 ] , [ 3000 , - 6.21044 , - 3.05176 , 1.89114 ] , [ 5000 , - 6.21155 , - 3.05324 , 1.89118 ] , [ 10000 , - 6.21226 , - 3.05427 , 1.89110 ]]) l = data [:, 0 ] hl = data [:, 1 ] kl = numpy . divide ( data [:, 2 ], l ) ll = numpy . divide ( data [:, 3 ], l ) if frame == 'CM' : hl [ 0 ] = hl [ 0 ] - 1 ll [ 0 ] = ll [ 0 ] - 1 kl [ 0 ] = kl [ 0 ] - 1 print ( 'Love numbers are in center of mass frame' ) elif frame == 'CF' : hlo = hl [ 0 ] llo = ll [ 0 ] hl [ 0 ] = ( hlo - llo ) * 2 / 3 ll [ 0 ] = ( hlo - llo ) * ( - 1 / 3 ) kl [ 0 ] = (( - 2 / 3 ) * llo ) - (( - 1 / 3 ) * hlo ) print ( 'Love numbers are in center of figure frame' ) elif frame == 'CE' : print ( 'Love numbers are in center of solid Earth frame' ) else : lovenrPREM . exit ( 'Please choose a compatible frame of reference: one of CM, CF, or CE' ) n = range ( 0 , lmax + 1 , 1 ) kn = numpy . interp ( n , l , kl ) hn = numpy . interp ( n , l , hl ) ln = numpy . interp ( n , l , ll ) kn [ 0 ] = 0 hn [ 0 ] = 0 ln [ 0 ] = 0 return ( kn , hn , ln ) upwcon ( degree , height ) \u00b6 Created on Sat May 9 18:49:45 2022 % UPWCON(degree,height,const) returns the upward continuation (R/r)^l, in which % uc = upwcon(degree,height) % INPUT % degree - Spherical harmonic degree, must be integer [scalar/vector] % height - Height above mean Earth radius [m] [scalar/vector] load constants in the file GRACEconstants - def: GRS80 constants % % OUTPUT % uc - Upward continuation terms. % ---------------------------------------------------------------------------- Source code in pyshbundle/GRACEpy.py 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 def upwcon ( degree , height ): ''' Created on Sat May 9 18:49:45 2022 % UPWCON(degree,height,const) returns the upward continuation (R/r)^l, in which % uc = upwcon(degree,height) % INPUT % degree - Spherical harmonic degree, must be integer [scalar/vector] % height - Height above mean Earth radius [m] [scalar/vector] load constants in the file GRACEconstants - def: GRS80 constants % % OUTPUT % uc - Upward continuation terms. % ---------------------------------------------------------------------------- ''' rr = numpy . divide ( GC . ae , numpy . add ( GC . ae , height )) uc = numpy . power ( rr , degree ) return ( uc ) Created on Thu Jul 14 09:10:27 2022 Summary of this function goes here calculates the phase difference between two time series based on the Hilbert transform method explained by Phillip et al. Phillips, T., R. S. Nerem, B. Fox-Kemper, J. S. Famiglietti, and B. Rajagopalan (2012), The influence of ENSO on global terrestrial water storage using GRACE, Geophysical Research Letters, 39 (16), L16,705, doi:10.1029/2012GL052495. This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Mon May 11 00:20:49 2020 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Thu Jun 30 13:47:51 2022 gaussian(L, cap): The program delivers the spherical harmonic coefficients of a gaussian smoothing filter. The coefficients are calculates according to Wahr et. al. (1998) equation (34) and Swenson and Wahr equation (34) How: Wl = gaussian(L,cap) L integer maximum degree cap integer half width of Gaussian smoothing function [km] Output: Wl [L+1 x 1] smoothing coefficients @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Fri Jun 17 15:31:15 2022 This function computes Gauss base points and weight factors using the algorithm given by Davis and Rabinowitz in 'Methods of Numerical Integration', page 365, Academic Press, 1975. bp, wf = grule(n) IN: n ....... number of base points required. OUT: bp ...... cosine of the base points wf ...... weight factors for computing integrals and such @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 summary ispec ( a , b =- 9999 ) \u00b6 Returns the function F from the spectra A and B Parameters: Name Type Description Default a _type_ cosine coefficients required b int sine coefficients. Defaults to -9999. -9999 Returns: Name Type Description f _type_ description See Also pyshbundle/spec.py Source code in pyshbundle/ispec.py 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 def ispec ( a , b = - 9999 ): \"\"\"Returns the function F from the spectra A and B Args: a (_type_): cosine coefficients b (int, optional): sine coefficients. Defaults to -9999. Returns: f (_type_): _description_ See Also: pyshbundle/spec.py \"\"\" n2 = a . shape [ 0 ] a [ 0 ,:] = a [ 0 , :] * 2 if ( np . absolute ( b [ n2 - 1 ,:]) < 1e-10 ) . all (): n = 2 * n2 - 2 a [ n2 - 1 ,:] = a [ n2 - 1 ,:] * 2 fs = ( a - 1 j * b ) / 2 fs = ( np . concatenate (( fs , np . conj ( fs [ np . arange ( n2 - 2 , 0 , - 1 ),:])), axis = 0 )) * max ( n , 1 ) else : n = 2 * n2 - 1 fs = ( a - 1 j * b ) / 2 fs = ( np . concatenate (( fs , np . conj ( fs [ np . arange ( n2 - 1 , 0 , - 1 ),:])), axis = 0 )) * n f = np . real ( scipy . fft . ifft ( fs . T ) . T ) return f This function uses cubic interpolation to replace NaNs @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Sat Jun 18 14:38:16 2022 % NEUMANN returns the weights and nodes for Neumann's numerical integration % % NB1 In 1st N-method, length(x) should not become too high, % since a linear system of this size is solved. Eg: 500. % NB2 No use is made of potential symmetries of nodes. % % HOW: w = neumann(x) -- 1st Neumann method % [w,x] = neumann(n) -- 2nd Neumann method (Gauss quadrature) % % IN: % x ...... base points (nodes) in the interval [-1;1] % n ...... number of weights and number of base points % % OUT: % w ...... quadrature weights % x ...... base points (nodes) in the interval [-1;1] % % USES: % plm, uberall/grule % % REMARKS: % 1st N.-method: see Sneeuw (1994) GJI 118, pp 707-716, eq. 19.5 % 2nd N.-method: see uberall/GRULE This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This script computes teh normal field for the given ellipsoid upto certain maxium degree. normalklm ( lmax , typ = 'wgs84' ) \u00b6 NORMALKLM returns an ellipsoidal normal field consisting of normalized -Jn, n=0,2,4,6,8 Parameters: Name Type Description Default lmax int maximum degree required typ str Ellipsoids can be either 'wgs84' - World Geodetic System 84, 'grs80' - , 'he' - hydrostatic equilibrium ellipsoid 'wgs84' Returns: Name Type Description nklm np. normal field in CS-format (sparse) TODO: Find type of nklm; I think raising TypeError, VlueError or NameError instad of general Exception Raises: Type Description Exception lmax should be an integer Exception lmax should be positive Exception Unknown type of ellipsoid, supports 'wgs84', GRS80 and 'he' References .J2,J4 values for hydrostatic equilibrium ellipsoid from Lambeck (1988) \"Geophysical Geodesy\", p.18 Source code in pyshbundle/normalklm.py 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 def normalklm ( lmax : int , typ : str = 'wgs84' ): \"\"\" NORMALKLM returns an ellipsoidal normal field consisting of normalized -Jn, n=0,2,4,6,8 Args: lmax (int): maximum degree typ (str): Ellipsoids can be either 'wgs84' - World Geodetic System 84, 'grs80' - , 'he' - hydrostatic equilibrium ellipsoid Returns: nklm (np.): normal field in CS-format (sparse) TODO: Find type of nklm; I think raising TypeError, VlueError or NameError instad of general Exception Raises: Exception: lmax should be an integer Exception: lmax should be positive Exception: Unknown type of ellipsoid, supports 'wgs84', `GRS80` and 'he' References: .J2,J4 values for hydrostatic equilibrium ellipsoid from Lambeck (1988) \"Geophysical Geodesy\", p.18 \"\"\" if type ( lmax ) != int : raise Exception ( \"lmax should be integer\" ) if lmax < 0 : raise Exception ( \"lmax should be positive\" ) typ_ = typ . lower () if ( typ_ == 'wgs84' ): J2 = 1.08262982131e-3 #% earth's dyn. form factor (= -C20 unnormalized) J4 = - 2.37091120053e-6 #% -C40 unnormalized J6 = 6.08346498882e-9 #% -C60 unnormalized J8 = - 1.42681087920e-11 #% -C80 unnormalized jcoefs = np . array ([ 1 , - J2 , - J4 , - J6 , - J8 ]) . T . reshape ( 5 , 1 ) l = np . arange ( 0 , min ( lmax + 2 , 8 + 2 ), 2 ) . T l . reshape ( l . shape [ 0 ], 1 ) elif ( typ_ == 'grs80' ): J2 = 1.08263e-3 # % earth's dyn. form factor (= -C20 unnormalized) J4 = - 2.37091222e-6 #% -C40 unnormalized J6 = 6.08347e-9 #% -C60 unnormalized J8 = - 1.427e-11 #% -C80 unnormalized jcoefs = np . array ([ 1 , - J2 , - J4 , - J6 , - J8 ]) . reshape ( 5 , 1 ) l = np . arange ( 0 , min ( lmax + 2 , 8 + 2 ), 2 ) . T l . reshape ( l . shape [ 0 ], 1 ) elif (( typ_ == 'he' ) or ( typ_ == 'hydro' )): J2 = 1.072618e-3 #% earth's dyn. form factor (= -C20 unnormalized) J4 = 0.2992e-5 #% -C40 unnormalized jcoefs = np . array ([ 1 , - J2 , - J4 ]) . T . reshape ( 5 , 1 ) l = np . arange ( 0 , min ( lmax + 2 , 4 + 2 ), 2 ) . T l . reshape ( l . shape [ 0 ], 1 ) else : raise Exception ( \"Unknown type of ellipsoid: \" , typ ) coefs = jcoefs [: len ( l )] . T / np . sqrt ( 2 * l + 1 ) # coefs.reshape(coefs.shape[0],1) data = np . array ( coefs )[ 0 ] row = np . array ( l ) col = np . zeros ( len ( l )) nklm = sparse . coo_matrix (( data ,( row , col )), shape = ( lmax , lmax )) . toarray () return nklm","title":"pyshbundle module"},{"location":"pyshbundle/#reference-mannual-pyshbundle","text":"The module codes can be categorized into four categories: load data convert data formats core functionality auxillary codes Navigate the Reference Manual based on the following schematic","title":"Reference Mannual - PySHBundle"},{"location":"pyshbundle/#doc-summary","text":"","title":"Doc Summary"},{"location":"pyshbundle/#load-data","text":"Created on Fri Feb 17 2023 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) The purpose of this script is to, firstly read what the data source is (JPL, CSR or ITSG) read file path for GRACE L2 spherical harmonics inputs, read replacement files for tn13 and tn14 source of the SH files (JPL, ITSG or CSR) The code returns path of data files, path of tn13 and path of tn14 replacement files This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Fri Dec 9 10:08:55 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Fri Dec 9 10:08:55 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Fri Dec 9 10:08:55 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Mon Feb 6 18:43:02 2023 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Fri Feb 17 2023 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This script contains some of the major relavant Physical and Geodetic(GRS80) constants:","title":"Load Data"},{"location":"pyshbundle/#convert-data-formats","text":"This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 1 2 3 4 5 6 7 8 9 10 11 cs2sc(field) converts the square (L+1)x(L+1) matrix 'field', containing spherical harmonics coefficients in |C\\S| storage format into a rectangular (L+1)x(2L+1) matrix in /S|C ormat. IN: field .... the square (L+1)x(L+1) numpy matrix field , containing spherical harmonics coefficients in |C\\S| storage format OUT: sc ....... rectangular (L+1)x(2L+1) numpy matrix in /S|C ormat @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) sc2cs - format conversion tool from rectangular sc format to a square cs format","title":"Convert Data Formats"},{"location":"pyshbundle/#pyshbundle.sc2cs.sc2cs","text":"converts the rectangular \\((L+1) imes (2L+1)\\) matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format into a square (L+1)x(L+1) matrix in |C\\S| format. Parameters: Name Type Description Default field numpy . ndarray the rectangular (L+1)x(2L+1) matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format required Returns: Name Type Description cs numpy . ndarray () square (L+1)x(L+1) matrix in |C\\S| format Source code in pyshbundle/sc2cs.py 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 def sc2cs ( field ): \"\"\"converts the rectangular $(L+1) \\times (2L+1)$ matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format into a square (L+1)x(L+1) matrix in |C\\S| format. Parameters: field (numpy.ndarray()): the rectangular (L+1)x(2L+1) matrix FIELD, containing spherical harmonics coefficients in /S|C\\ storage format Returns: cs (numpy.ndarray()): square (L+1)x(L+1) matrix in |C\\S| format \"\"\" rows = len ( field ) cols = len ( field [ 0 ]) if ( rows != cols ) and ( cols != 2 * rows - 1 ): sc2cs . exit ( \"Input neither in cs nor in sc format\" ) elif cols == rows : cs = field else : c = field [:, rows - 1 : cols ] st = numpy . transpose ( numpy . fliplr ( field [:, 0 : rows - 1 ])) z = numpy . zeros ([ 1 , rows ]) s = numpy . concatenate (( st , z ), axis = 0 ) cs = numpy . add ( c , s ) return ( cs ) Created on Fri Dec 9 11:43:15 2022 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Fri Dec 9 10:14:32 2022 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Tue Jan 24 10:14:27 2023 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc)","title":"sc2cs()"},{"location":"pyshbundle/#core-functionality","text":"Created on Wed Aug 24 09:26:32 2022 GSHA global spherical harmonic analysis IN: f ....... global field of size (lmax+1) 2 lmax or lmax 2 lmax method .. string argument, defining the analysis method: - 'ls' ..... least squares - 'wls' .... weighted least squares - 'aq' ..... approximate quadrature - 'fnm' .... first neumann method - 'snm' .... second neumann method - 'mean' ... block mean values (use of integrated Plm) grid .... optional string argument, defining the grid: - 'pole', 'mesh' ...... (default if lmax+1), equi-angular (lmax+1) 2 lmax, including poles and Greenwich meridian. - 'block', 'cell' ..... (default if lmax), equi-angular block midpoints lmax 2lmax - 'neumann', 'gauss' .. Gauss-Neumann grid (lmax+1) 2*lmax lmax .... maximum degree of development OUT: cs ...... Clm, Slm in |C\\S| format USES: plm, iplm, neumann, sc2cs SEE ALSO: GSHS REMARKS: TBD - Zlm-functions option - eigengrav, GRS80 - When 'pole' grid, m = 1 yields singular Plm-matrix! @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Wed Aug 10 15:55:22 2022 GSHS global spherical harmonic synthesis f = gshs(field) IN: field ... set of SH coefficients, either in SC-triangle or CS-square format quant ... optional string argument, defining the field quantity: - 'none' ............. (default), coefficients define the output - 'geoid' ............ geoid height [m], - 'potential' ........ potential [m^2/s^2], - 'dg', 'gravity' .... gravity anomaly [mGal], - 'tr' ............... grav. disturbance, 1st rad. derivative [mGal], - 'trr' .............. 2nd rad. derivative [1/s^2], - 'water' ............ equiv. water height [m], - 'smd' .............. surface mass density [kg/m^2]. grd .... optional string argument, defining the grid: - 'block', 'cell' .... equi-angular block midpoints. n 2n n ...... grid size parameter n. (default: n = lmax, determined from field) #longitude samples: 2 n #latitude samples n ('blocks') or n+1. h ...... (default: 0), height above Earth mean radius [m]. jflag .. (default: true), determines whether to subtract GRS80. OUT: f ....... the global field theRAD .. vector of co-latitudes [rad] lamRAD .. vector of longitudes [rad] USES: vec2cs, cs2sc, eigengrav, plm, normalklm, grule, ispec SEE ALSO: gsha This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) %::: pyshbundle.gddc% Created on Wed Dec 14 22:37:19 2022 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) PySHbundle: A Python implementation of MATLAB codes SHbundle This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Mon Aug 29 09:47:38 2022 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc)","title":"Core functionality"},{"location":"pyshbundle/#auxillary-codes","text":"PLM Fully normalized associated Legendre functions for a selected order M Input as l = np.array([np.arange(0,97,1)]) m = 0 thetaRAD = np.array([0,0.25,0.5,0.75,1]) HOW: p = plm(l, m, thetaRAD,3,1)[:,:,0] dp = plm(l, m, thetaRAD,3,2) 1 ddp = plm(l, m, thetaRAD,3,3) 2 IN: l ........ degree (vector). Integer, but not necessarily monotonic. For l < m a vector of zeros will be returned. m ........ order (scalar). If absent, m = 0 is assumed. thetaRAD . co-latitude [rad] (vector) OUT: p ........ Matrix with Legendre functions. The matrix has length(thetaRAD) rows and length(l) columns, unless l or thetaRAD is scalar. Then the output vector follows the shape of respectively l or thetaRAD. dp ....... Matrix with first derivative of Legendre functions. The matrix has length(thetaRAD) rows and length(l) columns, unless l or thetaRAD is scalar. Then the output vector follows the shape of respectively l or thetaRAD. ddp ...... Matrix with second derivative of Legendre functions. The matrix has length(thetaRAD) rows and length(l) columns, unless l or thetaRAD is scalar. Then the output vector follows the shape of respectively l or thetaRAD. SEE ALSO: iplm REMARKS: Previous versions calculated the derivatives towards the latitude, i. e. dP/d\\phi are calculated. Please check your code in order to get the derivatives correctly towards the co-latitude! -> dP/d hetaRAD = -dP/d\\phi -> d^2P/d hetaRAD^2 = d^2P/d\\phi^2 This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) @author: Vivek Yadav, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 IPLM Integrals of the fully normalized associated Legendre functions over blocks for a selected order M. HOW: p = iplm(l,m,theRAD) - assumes dt = theRAD(2)-theRAD(1) p = iplm(l,m,theRAD,dt) IN: l ........ degree (vector). Integer, but not necessarily monotonic. For l < m a vector of zeros will be returned. m ........ order (scalar) theRAD ... co-latitude [rad] (vector) dt ....... integration block-size [rad] (scalar). Default: dt = theRAD(2)-theRAD(1) OUT: p ........ Matrix with integrated Legendre functions. Functions are integrated from theRAD(i)-dt/2 till theRAD(i)+dt/2. The matrix has length(TH) rows and length(L) columns, unless L or TH is scalar. Then the output vector follows the shape of respectively L or TH. USES: plm REMARKS: The blocks at the pole might become too large under circumstances. This is not treated separately, i.e. unwanted output may appear. In case TH is scalar, dt will be 1 (arbitrarily). This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6","title":"Auxillary Codes"},{"location":"pyshbundle/#pyshbundle.GRACEpy.lovenr","text":"Created on Mon May 11 11:09:28 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Source code in pyshbundle/GRACEpy.py 67 68 69 70 71 72 73 74 75 76 77 def lovenr ( lmax ): \"\"\" Created on Mon May 11 11:09:28 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) \"\"\" l = [ 0 , 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 , 9 , 10 , 12 , 15 , 20 , 30 , 40 , 50 , 70 , 100 , 150 , 200 ] kl = numpy . divide ([ 0 , 270 , - 3030 , - 1940 , - 1320 , - 1040 , - 890 , - 810 , - 760 , - 720 , - 690 , - 640 , - 580 , - 510 , - 400 , - 330 , - 270 , - 200 , - 140 , - 100 , - 700 ], 1e4 ) n = range ( 0 , lmax + 1 , 1 ) kn = numpy . interp ( n , l , kl ) return ( kn )","title":"lovenr()"},{"location":"pyshbundle/#pyshbundle.GRACEpy.lovenrPREM","text":"Created on Mon May 11 11:51:29 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Source code in pyshbundle/GRACEpy.py 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 def lovenrPREM ( lmax , frame ): \"\"\" Created on Mon May 11 11:51:29 2022 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) \"\"\" data = numpy . array ([[ 1 , - 0.28476 , 0.00000 , 0.10462 ], [ 2 , - 0.99297 , - 0.61274 , 0.04661 ] , [ 3 , - 1.05142 , - 0.58897 , 0.21048 ] , [ 4 , - 1.05378 , - 0.53513 , 0.23564 ] , [ 5 , - 1.08658 , - 0.52382 , 0.23186 ] , [ 6 , - 1.14404 , - 0.54222 , 0.23263 ] , [ 7 , - 1.21254 , - 0.57464 , 0.24058 ] , [ 8 , - 1.28403 , - 0.61256 , 0.25308 ] , [ 9 , - 1.35479 , - 0.65203 , 0.26799 ] , [ 10 , - 1.42330 , - 0.69140 , 0.28419 ] , [ 11 , - 1.48909 , - 0.72998 , 0.30121 ] , [ 12 , - 1.55204 , - 0.76749 , 0.31880 ] , [ 13 , - 1.61221 , - 0.80381 , 0.33684 ] , [ 14 , - 1.66968 , - 0.83886 , 0.35522 ] , [ 15 , - 1.72454 , - 0.87260 , 0.37382 ] , [ 16 , - 1.77684 , - 0.90499 , 0.39251 ] , [ 17 , - 1.82668 , - 0.93599 , 0.41119 ] , [ 18 , - 1.87414 , - 0.96560 , 0.42973 ] , [ 19 , - 1.91928 , - 0.99382 , 0.44804 ] , [ 20 , - 1.96220 , - 1.02066 , 0.46603 ] , [ 21 , - 2.00297 , - 1.04614 , 0.48363 ] , [ 22 , - 2.04169 , - 1.07029 , 0.50078 ] , [ 23 , - 2.07844 , - 1.09313 , 0.51742 ] , [ 24 , - 2.11332 , - 1.11472 , 0.53355 ] , [ 25 , - 2.14642 , - 1.13511 , 0.54912 ] , [ 30 , - 2.28839 , - 1.22067 , 0.61848 ] , [ 40 , - 2.48641 , - 1.33024 , 0.71925 ] , [ 50 , - 2.61710 , - 1.39016 , 0.78410 ] , [ 60 , - 2.71254 , - 1.42377 , 0.82683 ] , [ 70 , - 2.78865 , - 1.44313 , 0.85550 ] , [ 80 , - 2.85368 , - 1.45474 , 0.87479 ] , [ 90 , - 2.91216 , - 1.46226 , 0.88764 ] , [ 100 , - 2.96672 , - 1.46787 , 0.89598 ] , [ 120 , - 3.06983 , - 1.47811 , 0.90421 ] , [ 140 , - 3.16950 , - 1.49082 , 0.90634 ] , [ 160 , - 3.26809 , - 1.50771 , 0.90603 ] , [ 180 , - 3.36633 , - 1.52909 , 0.90532 ] , [ 200 , - 3.48436 , - 1.55473 , 0.90547 ] , [ 250 , - 3.70773 , - 1.63448 , 0.91388 ] , [ 300 , - 3.94607 , - 1.73053 , 0.93714 ] , [ 350 , - 4.17591 , - 1.83593 , 0.97495 ] , [ 400 , - 4.39433 , - 1.94515 , 1.02467 ] , [ 500 , - 4.78872 , - 2.15940 , 1.14615 ] , [ 600 , - 5.12008 , - 2.35243 , 1.27714 ] , [ 800 , - 5.59959 , - 2.64798 , 1.50995 ] , [ 1000 , - 5.88447 , - 2.83157 , 1.67325 ] , [ 1500 , - 6.15106 , - 3.00957 , 1.84797 ] , [ 2000 , - 6.20058 , - 3.04408 , 1.88423 ] , [ 3000 , - 6.21044 , - 3.05176 , 1.89114 ] , [ 5000 , - 6.21155 , - 3.05324 , 1.89118 ] , [ 10000 , - 6.21226 , - 3.05427 , 1.89110 ]]) l = data [:, 0 ] hl = data [:, 1 ] kl = numpy . divide ( data [:, 2 ], l ) ll = numpy . divide ( data [:, 3 ], l ) if frame == 'CM' : hl [ 0 ] = hl [ 0 ] - 1 ll [ 0 ] = ll [ 0 ] - 1 kl [ 0 ] = kl [ 0 ] - 1 print ( 'Love numbers are in center of mass frame' ) elif frame == 'CF' : hlo = hl [ 0 ] llo = ll [ 0 ] hl [ 0 ] = ( hlo - llo ) * 2 / 3 ll [ 0 ] = ( hlo - llo ) * ( - 1 / 3 ) kl [ 0 ] = (( - 2 / 3 ) * llo ) - (( - 1 / 3 ) * hlo ) print ( 'Love numbers are in center of figure frame' ) elif frame == 'CE' : print ( 'Love numbers are in center of solid Earth frame' ) else : lovenrPREM . exit ( 'Please choose a compatible frame of reference: one of CM, CF, or CE' ) n = range ( 0 , lmax + 1 , 1 ) kn = numpy . interp ( n , l , kl ) hn = numpy . interp ( n , l , hl ) ln = numpy . interp ( n , l , ll ) kn [ 0 ] = 0 hn [ 0 ] = 0 ln [ 0 ] = 0 return ( kn , hn , ln )","title":"lovenrPREM()"},{"location":"pyshbundle/#pyshbundle.GRACEpy.upwcon","text":"Created on Sat May 9 18:49:45 2022 % UPWCON(degree,height,const) returns the upward continuation (R/r)^l, in which % uc = upwcon(degree,height) % INPUT % degree - Spherical harmonic degree, must be integer [scalar/vector] % height - Height above mean Earth radius [m] [scalar/vector] load constants in the file GRACEconstants - def: GRS80 constants % % OUTPUT % uc - Upward continuation terms. % ---------------------------------------------------------------------------- Source code in pyshbundle/GRACEpy.py 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 def upwcon ( degree , height ): ''' Created on Sat May 9 18:49:45 2022 % UPWCON(degree,height,const) returns the upward continuation (R/r)^l, in which % uc = upwcon(degree,height) % INPUT % degree - Spherical harmonic degree, must be integer [scalar/vector] % height - Height above mean Earth radius [m] [scalar/vector] load constants in the file GRACEconstants - def: GRS80 constants % % OUTPUT % uc - Upward continuation terms. % ---------------------------------------------------------------------------- ''' rr = numpy . divide ( GC . ae , numpy . add ( GC . ae , height )) uc = numpy . power ( rr , degree ) return ( uc ) Created on Thu Jul 14 09:10:27 2022 Summary of this function goes here calculates the phase difference between two time series based on the Hilbert transform method explained by Phillip et al. Phillips, T., R. S. Nerem, B. Fox-Kemper, J. S. Famiglietti, and B. Rajagopalan (2012), The influence of ENSO on global terrestrial water storage using GRACE, Geophysical Research Letters, 39 (16), L16,705, doi:10.1029/2012GL052495. This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) Created on Mon May 11 00:20:49 2020 @author: Dr. Bramha Dutt Vishwakarma, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Thu Jun 30 13:47:51 2022 gaussian(L, cap): The program delivers the spherical harmonic coefficients of a gaussian smoothing filter. The coefficients are calculates according to Wahr et. al. (1998) equation (34) and Swenson and Wahr equation (34) How: Wl = gaussian(L,cap) L integer maximum degree cap integer half width of Gaussian smoothing function [km] Output: Wl [L+1 x 1] smoothing coefficients @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Fri Jun 17 15:31:15 2022 This function computes Gauss base points and weight factors using the algorithm given by Davis and Rabinowitz in 'Methods of Numerical Integration', page 365, Academic Press, 1975. bp, wf = grule(n) IN: n ....... number of base points required. OUT: bp ...... cosine of the base points wf ...... weight factors for computing integrals and such @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 summary","title":"upwcon()"},{"location":"pyshbundle/#pyshbundle.ispec.ispec","text":"Returns the function F from the spectra A and B Parameters: Name Type Description Default a _type_ cosine coefficients required b int sine coefficients. Defaults to -9999. -9999 Returns: Name Type Description f _type_ description See Also pyshbundle/spec.py Source code in pyshbundle/ispec.py 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 def ispec ( a , b = - 9999 ): \"\"\"Returns the function F from the spectra A and B Args: a (_type_): cosine coefficients b (int, optional): sine coefficients. Defaults to -9999. Returns: f (_type_): _description_ See Also: pyshbundle/spec.py \"\"\" n2 = a . shape [ 0 ] a [ 0 ,:] = a [ 0 , :] * 2 if ( np . absolute ( b [ n2 - 1 ,:]) < 1e-10 ) . all (): n = 2 * n2 - 2 a [ n2 - 1 ,:] = a [ n2 - 1 ,:] * 2 fs = ( a - 1 j * b ) / 2 fs = ( np . concatenate (( fs , np . conj ( fs [ np . arange ( n2 - 2 , 0 , - 1 ),:])), axis = 0 )) * max ( n , 1 ) else : n = 2 * n2 - 1 fs = ( a - 1 j * b ) / 2 fs = ( np . concatenate (( fs , np . conj ( fs [ np . arange ( n2 - 1 , 0 , - 1 ),:])), axis = 0 )) * n f = np . real ( scipy . fft . ifft ( fs . T ) . T ) return f This function uses cubic interpolation to replace NaNs @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 Created on Sat Jun 18 14:38:16 2022 % NEUMANN returns the weights and nodes for Neumann's numerical integration % % NB1 In 1st N-method, length(x) should not become too high, % since a linear system of this size is solved. Eg: 500. % NB2 No use is made of potential symmetries of nodes. % % HOW: w = neumann(x) -- 1st Neumann method % [w,x] = neumann(n) -- 2nd Neumann method (Gauss quadrature) % % IN: % x ...... base points (nodes) in the interval [-1;1] % n ...... number of weights and number of base points % % OUT: % w ...... quadrature weights % x ...... base points (nodes) in the interval [-1;1] % % USES: % plm, uberall/grule % % REMARKS: % 1st N.-method: see Sneeuw (1994) GJI 118, pp 707-716, eq. 19.5 % 2nd N.-method: see uberall/GRULE This file is part of PySHbundle. PySHbundle is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. 1 2 3 4 5 6 7 This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <http://www.gnu.org/licenses/>. Acknowledgement Statement Please note that PySHbundle has adapted the following code packages, both licensed under GNU General Public License 1. SHbundle: https://www.gis.uni-stuttgart.de/en/research/downloads/shbundle/ Downscaling GRACE Total Water Storage Change using Partial Least Squares Regression https://springernature.figshare.com/collections/Downscaling_GRACE_Total_Water_Storage_Change_using_Partial_Least_Squares_Regression/5054564 Key Papers Referred Vishwakarma, B. D., Horwath, M., Devaraju, B., Groh, A., & Sneeuw, N. (2017). A data\u2010driven approach for repairing the hydrological catchment signal damage due to filtering of GRACE products. Water Resources Research, 53(11), 9824-9844. https://doi.org/10.1002/2017WR021150 Vishwakarma, B. D., Zhang, J., & Sneeuw, N. (2021). Downscaling GRACE total water storage change using partial least squares regression. Scientific data, 8(1), 95. https://doi.org/10.1038/s41597-021-00862-6 @author: Amin Shakya, Interdisciplinary Center for Water Research (ICWaR), Indian Institute of Science (IISc) This script computes teh normal field for the given ellipsoid upto certain maxium degree.","title":"ispec()"},{"location":"pyshbundle/#pyshbundle.normalklm.normalklm","text":"NORMALKLM returns an ellipsoidal normal field consisting of normalized -Jn, n=0,2,4,6,8 Parameters: Name Type Description Default lmax int maximum degree required typ str Ellipsoids can be either 'wgs84' - World Geodetic System 84, 'grs80' - , 'he' - hydrostatic equilibrium ellipsoid 'wgs84' Returns: Name Type Description nklm np. normal field in CS-format (sparse) TODO: Find type of nklm; I think raising TypeError, VlueError or NameError instad of general Exception Raises: Type Description Exception lmax should be an integer Exception lmax should be positive Exception Unknown type of ellipsoid, supports 'wgs84', GRS80 and 'he' References .J2,J4 values for hydrostatic equilibrium ellipsoid from Lambeck (1988) \"Geophysical Geodesy\", p.18 Source code in pyshbundle/normalklm.py 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 def normalklm ( lmax : int , typ : str = 'wgs84' ): \"\"\" NORMALKLM returns an ellipsoidal normal field consisting of normalized -Jn, n=0,2,4,6,8 Args: lmax (int): maximum degree typ (str): Ellipsoids can be either 'wgs84' - World Geodetic System 84, 'grs80' - , 'he' - hydrostatic equilibrium ellipsoid Returns: nklm (np.): normal field in CS-format (sparse) TODO: Find type of nklm; I think raising TypeError, VlueError or NameError instad of general Exception Raises: Exception: lmax should be an integer Exception: lmax should be positive Exception: Unknown type of ellipsoid, supports 'wgs84', `GRS80` and 'he' References: .J2,J4 values for hydrostatic equilibrium ellipsoid from Lambeck (1988) \"Geophysical Geodesy\", p.18 \"\"\" if type ( lmax ) != int : raise Exception ( \"lmax should be integer\" ) if lmax < 0 : raise Exception ( \"lmax should be positive\" ) typ_ = typ . lower () if ( typ_ == 'wgs84' ): J2 = 1.08262982131e-3 #% earth's dyn. form factor (= -C20 unnormalized) J4 = - 2.37091120053e-6 #% -C40 unnormalized J6 = 6.08346498882e-9 #% -C60 unnormalized J8 = - 1.42681087920e-11 #% -C80 unnormalized jcoefs = np . array ([ 1 , - J2 , - J4 , - J6 , - J8 ]) . T . reshape ( 5 , 1 ) l = np . arange ( 0 , min ( lmax + 2 , 8 + 2 ), 2 ) . T l . reshape ( l . shape [ 0 ], 1 ) elif ( typ_ == 'grs80' ): J2 = 1.08263e-3 # % earth's dyn. form factor (= -C20 unnormalized) J4 = - 2.37091222e-6 #% -C40 unnormalized J6 = 6.08347e-9 #% -C60 unnormalized J8 = - 1.427e-11 #% -C80 unnormalized jcoefs = np . array ([ 1 , - J2 , - J4 , - J6 , - J8 ]) . reshape ( 5 , 1 ) l = np . arange ( 0 , min ( lmax + 2 , 8 + 2 ), 2 ) . T l . reshape ( l . shape [ 0 ], 1 ) elif (( typ_ == 'he' ) or ( typ_ == 'hydro' )): J2 = 1.072618e-3 #% earth's dyn. form factor (= -C20 unnormalized) J4 = 0.2992e-5 #% -C40 unnormalized jcoefs = np . array ([ 1 , - J2 , - J4 ]) . T . reshape ( 5 , 1 ) l = np . arange ( 0 , min ( lmax + 2 , 4 + 2 ), 2 ) . T l . reshape ( l . shape [ 0 ], 1 ) else : raise Exception ( \"Unknown type of ellipsoid: \" , typ ) coefs = jcoefs [: len ( l )] . T / np . sqrt ( 2 * l + 1 ) # coefs.reshape(coefs.shape[0],1) data = np . array ( coefs )[ 0 ] row = np . array ( l ) col = np . zeros ( len ( l )) nklm = sparse . coo_matrix (( data ,( row , col )), shape = ( lmax , lmax )) . toarray () return nklm","title":"normalklm()"},{"location":"usage/","text":"Usage \u00b6 To use pyshbundle in a project: 1 import pyshbundle","title":"Usage"},{"location":"usage/#usage","text":"To use pyshbundle in a project: 1 import pyshbundle","title":"Usage"}]}